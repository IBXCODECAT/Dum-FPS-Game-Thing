using UnityEngine;

namespace BlueScreenStudios.Chunky
{
    public class Chunk : MonoBehaviour
    {
        /// <summary>
        /// Stores wether or not the chunk has been generated by the perlin noise generation
        /// </summary>
        private bool perlinGenerated = false;

        /// <summary>
        /// Stores wether or not the chunk has been modified by the player
        /// </summary>
        private bool playerModified = false;

        /// <summary>
        /// Stores wether or not this chunk's modifications has been saved
        /// </summary>
        private bool chunkUpdatesSaved = false;

        #region Getters
        /// <summary>
        /// Gets the generation status of this chunk
        /// </summary>
        /// <returns>True if the chunk has been generated using the perlin noise generation</returns>
        internal bool IsChunkGenerated()
        {
            return perlinGenerated;
        }

        /// <summary>
        /// Checks if this chunk has been modified by the player
        /// </summary>
        /// <returns>True if this chunk has been modified by the player</returns>
        internal bool ChunkWasPlayerModified()
        {
            return playerModified;
        }

        /// <summary>
        /// Checks if this chunk has been saved to disk
        /// </summary>
        /// <returns>True if the chunk has been saved to disk</returns>
        internal bool IsChunkSaved()
        {
            return chunkUpdatesSaved;
        }
        #endregion Getters

        #region Setters
        /// <summary>
        /// Sets the 'chunk generated' status to true.
        /// Only call this method once the chunk has been generated with the perlin noise
        /// </summary>
        internal void ChunkHasBeenGenerated()
        {
            perlinGenerated = true;
        }

        /// <summary>
        /// Sets the 'chunk modified by player' status to true.
        /// Sets the 'chunk updates saved' status to false.
        /// Only call this method once a chunk's heighmap or features have been modified by the player
        /// </summary>
        internal void ChunkWasModifiedByPlayer()
        {
            playerModified = true;
            chunkUpdatesSaved = false;
        }

        /// <summary>
        /// Sets the 'chunk updates saved' status to true.
        /// Only call this method once a chunk has been written to disk.
        /// </summary>
        internal void ChunkHasBeenSaved()
        {
            chunkUpdatesSaved = true;
        }
        #endregion Setters
    }
}
